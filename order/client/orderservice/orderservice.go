// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: order.proto

package orderservice

import (
	"context"

	"example/order/i-kun.vip/pb/order"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	OrderCreateReq  = order.OrderCreateReq
	OrderCreateResp = order.OrderCreateResp
	Request         = order.Request
	Response        = order.Response

	OrderService interface {
		OrderCreate(ctx context.Context, in *OrderCreateReq, opts ...grpc.CallOption) (*OrderCreateResp, error)
	}

	defaultOrderService struct {
		cli zrpc.Client
	}
)

func NewOrderService(cli zrpc.Client) OrderService {
	return &defaultOrderService{
		cli: cli,
	}
}

func (m *defaultOrderService) OrderCreate(ctx context.Context, in *OrderCreateReq, opts ...grpc.CallOption) (*OrderCreateResp, error) {
	client := order.NewOrderServiceClient(m.cli.Conn())
	return client.OrderCreate(ctx, in, opts...)
}
